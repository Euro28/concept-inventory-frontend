[{"/home/euro/Documents/concept-inventory-logic/client/src/index.js":"1","/home/euro/Documents/concept-inventory-logic/client/src/Login/login.jsx":"2","/home/euro/Documents/concept-inventory-logic/client/src/App.js":"3","/home/euro/Documents/concept-inventory-logic/client/src/Login/register.jsx":"4","/home/euro/Documents/concept-inventory-logic/client/src/Dashboard/dashboard.jsx":"5","/home/euro/Documents/concept-inventory-logic/client/src/Toolbar/toolbar.jsx":"6","/home/euro/Documents/concept-inventory-logic/client/src/Quiz/questions.js":"7","/home/euro/Documents/concept-inventory-logic/client/src/Quiz/quiz.jsx":"8","/home/euro/Documents/concept-inventory-logic/client/src/Quiz/results.jsx":"9","/home/euro/Documents/concept-inventory-logic/client/src/Login/loginToolbar.jsx":"10","/home/euro/Documents/concept-inventory-logic/client/src/Dashboard/dashboardToolbar.jsx":"11","/home/euro/Documents/client/src/index.js":"12","/home/euro/Documents/client/src/App.js":"13","/home/euro/Documents/client/src/Login/login.jsx":"14","/home/euro/Documents/client/src/Dashboard/dashboard.jsx":"15","/home/euro/Documents/client/src/Login/register.jsx":"16","/home/euro/Documents/client/src/Quiz/results.jsx":"17","/home/euro/Documents/client/src/Quiz/quiz.jsx":"18","/home/euro/Documents/client/src/Login/loginToolbar.jsx":"19","/home/euro/Documents/client/src/Dashboard/dashboardToolbar.jsx":"20","/home/euro/Documents/client/src/Quiz/newQuiz/newQuestion.jsx":"21","/home/euro/Documents/client/src/Quiz/newQuiz/newQuestionComponents.js":"22","/home/euro/Documents/client/src/Quiz/newQuiz/newAnswer.jsx":"23"},{"size":812,"mtime":1610292635867,"results":"24","hashOfConfig":"25"},{"size":2111,"mtime":1610330677835,"results":"26","hashOfConfig":"25"},{"size":728,"mtime":1610224338395,"results":"27","hashOfConfig":"25"},{"size":1866,"mtime":1610295335258,"results":"28","hashOfConfig":"25"},{"size":1472,"mtime":1610310259220,"results":"29","hashOfConfig":"25"},{"size":195,"mtime":1610040852780,"results":"30","hashOfConfig":"25"},{"size":2591,"mtime":1610332305412,"results":"31","hashOfConfig":"25"},{"size":1239,"mtime":1610332316084,"results":"32","hashOfConfig":"25"},{"size":872,"mtime":1610215428189,"results":"33","hashOfConfig":"25"},{"size":403,"mtime":1610144696079,"results":"34","hashOfConfig":"25"},{"size":444,"mtime":1610205829815,"results":"35","hashOfConfig":"25"},{"size":661,"mtime":1610494874042,"results":"36","hashOfConfig":"37"},{"size":734,"mtime":1610587275592,"results":"38","hashOfConfig":"37"},{"size":2322,"mtime":1610554283022,"results":"39","hashOfConfig":"37"},{"size":1567,"mtime":1610580664004,"results":"40","hashOfConfig":"37"},{"size":1803,"mtime":1610492999633,"results":"41","hashOfConfig":"37"},{"size":872,"mtime":1610492913281,"results":"42","hashOfConfig":"37"},{"size":1462,"mtime":1610586759524,"results":"43","hashOfConfig":"37"},{"size":403,"mtime":1610144696079,"results":"44","hashOfConfig":"37"},{"size":444,"mtime":1610205829815,"results":"45","hashOfConfig":"37"},{"size":2726,"mtime":1610577256949,"results":"46","hashOfConfig":"37"},{"size":794,"mtime":1610566467165,"results":"47","hashOfConfig":"37"},{"size":1873,"mtime":1610572617405,"results":"48","hashOfConfig":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1kfizyg",{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"gktgpc",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"75"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},"/home/euro/Documents/concept-inventory-logic/client/src/index.js",[],["104","105"],"/home/euro/Documents/concept-inventory-logic/client/src/Login/login.jsx",["106","107"],"/home/euro/Documents/concept-inventory-logic/client/src/App.js",[],"/home/euro/Documents/concept-inventory-logic/client/src/Login/register.jsx",[],"/home/euro/Documents/concept-inventory-logic/client/src/Dashboard/dashboard.jsx",[],"/home/euro/Documents/concept-inventory-logic/client/src/Toolbar/toolbar.jsx",[],["108","109"],"/home/euro/Documents/concept-inventory-logic/client/src/Quiz/questions.js",[],"/home/euro/Documents/concept-inventory-logic/client/src/Quiz/quiz.jsx",["110"],"/home/euro/Documents/concept-inventory-logic/client/src/Quiz/results.jsx",[],"/home/euro/Documents/concept-inventory-logic/client/src/Login/loginToolbar.jsx",[],"/home/euro/Documents/concept-inventory-logic/client/src/Dashboard/dashboardToolbar.jsx",[],"/home/euro/Documents/client/src/index.js",[],["111","112"],"/home/euro/Documents/client/src/App.js",[],"/home/euro/Documents/client/src/Login/login.jsx",["113","114"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nimport Register from \"./register.jsx\"\nimport LoginToolbar from \"./loginToolbar.jsx\";\n\nconst Login = () => {\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  \n  useEffect(() => {\n    const loggedIn = async () => {\n      try {\n        const user = await axios.post(\"/api/login\");\n        if (user.status === 200) {\n          logIn();\n        }\n      } catch (err) {}\n    };\n\n    loggedIn();\n  }, []);\n\n  const logIn = () => {\n    history.replace({\n      pathname: \"/dashboard\",\n    });\n  };\n\n  const submitName = async (e) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      const user = await axios.post(\"/api/login\", { name });\n      setLoading(false);\n      if (user.status === 200) {\n        Cookies.set(\"name\", name);\n        logIn();\n      } else {\n        setError(true);\n        setName(\"\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <LoginToolbar />\n      <div className=\"Login\">\n        <h1> Login </h1>\n        <Form onSubmit={(e) => submitName(e)}>\n          <Form.Group controlid=\"formname\">\n            <Form.Label> username</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"enter name\"\n              onChange={(e) => setName(e.target.value)}\n            />\n            <Form.Text className=\"text-muted\">register a name first</Form.Text>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            login\n          </Button>\n        </Form>\n        {loading && (\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\"> Loading... </span>\n          </Spinner>\n        )}\n\n        {error && (\n          <Alert variant={\"danger\"} dismissible onClose={() => setError(false)}>\n            No such user exists\n          </Alert>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","/home/euro/Documents/client/src/Dashboard/dashboard.jsx",[],"/home/euro/Documents/client/src/Login/register.jsx",[],"/home/euro/Documents/client/src/Quiz/results.jsx",[],"/home/euro/Documents/client/src/Quiz/quiz.jsx",["115"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport * as Survey from \"survey-react\";\n\nconst Quiz = (props) => {\n  // const [quiz, setQuiz] = useState({})\n  const [resultPage, setResultPage] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [questions, setQuestions] = useState({});\n\n  useEffect(() => {\n    const getQuestions = async () => {\n      try {\n        const questionsAPI = await axios.get(\"/api/questions\");\n        setQuestions(questionsAPI.data);\n      } catch (err) {\n        setError(\"couldnt retrieve questions please contact euro\");\n      }\n    };\n\n    getQuestions();\n  }, []);\n  const storeData = async (quizResults) => {\n    try {\n      await axios.post(\"/api/results\", {\n        results: quizResults,\n      });\n      await axios.patch(\"/api/takenQuiz\");\n    } catch (err) {\n      setError(\n        \"couldn't post results of quiz, could you please take it again sorry :(\"\n      );\n    }\n  };\n  //make this a separate file\n  const Results = (data) => (\n    <main>\n      <h1> Results page </h1>\n    </main>\n  );\n\n  return (\n    <>\n      {resultPage ? (\n        Results()\n      ) : (\n        <div>\n          <Survey.Survey\n            showCompletedPage={false}\n            onComplete={(data) => {\n              storeData(data.valuesHash);\n              setResultPage(true);\n            }}\n            json={questions}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Quiz;\n","/home/euro/Documents/client/src/Login/loginToolbar.jsx",[],"/home/euro/Documents/client/src/Dashboard/dashboardToolbar.jsx",[],"/home/euro/Documents/client/src/Quiz/newQuiz/newQuestion.jsx",["116"],"import React, { useState, useEffect } from \"react\";\nimport { BUTTON, MYFORM, CONTAINER } from \"./newQuestionComponents.js\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport NewAnswer from \"./newAnswer.jsx\";\n//the form you have two initial fields,\n//first is the question name\n//the second is a button which says add a new answer\n//\n//when you click the button that says add a new answer\n//the answer form with 3 fields shows up, when you click submit answer\n//it submits answer to answers variable and sets form answer form to not visible again\n//\n//the form for adding a new answer should have 3 fields\n//the first field is display answer\n//the second field should be a dropdown of concepts, if the concepts\n//they are looking for is not found they should be able to add a custom one that is saved\n//the third field is a checkbox stating the answer is correct\n//\n//if the user types in misconception field the correct checkbox should be disabled\n//if the user ticks the correct checkbox the misconception field should be cleared and\n//disabled\n//\n//after submitting the question, there should be at a minimum two answers\n//and at least one answer must be marked correct\n\n//each answer prinnted should also have a remove and edit button\n//remove button is simple remove from object\n//edit will open newAnswer with passed in current props, and delete current entry.\n//\nconst NewQuestion = () => {\n  const [answers, setAnswers] = useState([]);\n  const [newAnswer, setNewAnswer] = useState(false);\n\n  const addAnswer = (ans) => {\n    setNewAnswer(false);\n\n    const ansCopy = [...answers];\n    ansCopy.push(ans);\n\n    setAnswers(ansCopy);\n  };\n\n  useEffect(() => {\n    console.log(\"answers\", answers);\n  }, [answers]);\n\n  return (\n    <>\n      <CONTAINER>\n        <MYFORM className=\"mx-auto\">\n          <Form.Group controlId=\"questionName\">\n            <Form.Label> Question: </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"question\"\n              placeholder=\"Question...\"\n            />\n          </Form.Group>\n          <BUTTON onClick={() => setNewAnswer(true)} disabled={newAnswer}>\n            Add an answer\n          </BUTTON>\n          {!newAnswer && (\n            <BUTTON\n              style={{ \"marginLeft\": \"560px\" }}\n              onClick={() => console.log(\"patch / post new question data\")}\n            >\n              Save Changes\n            </BUTTON>\n          )}\n        </MYFORM>\n        {newAnswer && <NewAnswer addAnswer={addAnswer} />}\n      </CONTAINER>\n      {answers.map((answer) => (\n        <li key={answer.title}>\n          {answer.title} {answer.misconception} {String(answer.correct)}\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default NewQuestion;\n",["117","118"],"/home/euro/Documents/client/src/Quiz/newQuiz/newQuestionComponents.js",[],"/home/euro/Documents/client/src/Quiz/newQuiz/newAnswer.jsx",["119"],"import React, { useState } from \"react\";\nimport { BUTTON, MYFORM, CONTAINER } from \"./newQuestionComponents.js\";\nimport { Form, Button } from \"react-bootstrap\";\n\n//the form for adding a new answer should have 3 fields\n//the first field is display answer\n//the second field should be a dropdown of concepts, if the concepts\n//they are looking for is not found they should be able to add a custom one that is saved\n//the third field is a checkbox stating the answer is correct\n\nconst NewAnswer = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [misconception, setMisconception] = useState(\"\");\n  const [correct, setCorrect] = useState(false);\n\n  return (\n    <CONTAINER>\n      <MYFORM\n        className=\"mx-auto\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          props.addAnswer({title, misconception, correct})\n        }}\n      >\n        <Form.Group controlId=\"answerTitle\">\n          <Form.Label> Answer :</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"answer\"\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"answerConcepts\">\n          <Form.Label> Misconception: </Form.Label>\n          <Form.Control\n            as=\"select\"\n            defaultValue=\"Choose...\"\n            onChange={(e) => setMisconception(e.target.value)}\n          >\n            <option>Choose...</option>\n            <option>Conjunction</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group id=\"correctCheckbox\">\n          <Form.Check\n            type=\"checkbox\"\n            label=\"Correct Answer?\"\n            onChange={(e) => setCorrect(e.target.checked)}\n          />\n        </Form.Group>\n        <BUTTON type=\"submit\"> Submit </BUTTON>\n      </MYFORM>\n    </CONTAINER>\n  );\n};\n\nexport default NewAnswer;\n",["120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":31,"column":7,"nodeType":"128","messageId":"129","endLine":31,"endColumn":12},{"ruleId":"130","severity":1,"message":"131","line":33,"column":9,"nodeType":"132","endLine":37,"endColumn":4,"suggestions":"133"},{"ruleId":"122","replacedBy":"134"},{"ruleId":"124","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":9,"column":10,"nodeType":"128","messageId":"138","endLine":9,"endColumn":15},{"ruleId":"122","replacedBy":"139"},{"ruleId":"124","replacedBy":"140"},{"ruleId":"136","severity":1,"message":"141","line":11,"column":8,"nodeType":"128","messageId":"138","endLine":11,"endColumn":16},{"ruleId":"130","severity":1,"message":"142","line":32,"column":6,"nodeType":"143","endLine":32,"endColumn":8,"suggestions":"144"},{"ruleId":"136","severity":1,"message":"137","line":8,"column":10,"nodeType":"128","messageId":"138","endLine":8,"endColumn":15},{"ruleId":"136","severity":1,"message":"145","line":3,"column":16,"nodeType":"128","messageId":"138","endLine":3,"endColumn":22},{"ruleId":"122","replacedBy":"146"},{"ruleId":"124","replacedBy":"147"},{"ruleId":"136","severity":1,"message":"145","line":3,"column":16,"nodeType":"128","messageId":"138","endLine":3,"endColumn":22},{"ruleId":"122","replacedBy":"148"},{"ruleId":"124","replacedBy":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-use-before-define","'logIn' was used before it was defined.","Identifier","usedBeforeDefined","react-hooks/exhaustive-deps","The 'logIn' function makes the dependencies of useEffect Hook (at line 31) change on every render. To fix this, wrap the definition of 'logIn' in its own useCallback() Hook.","VariableDeclarator",["152"],["150"],["151"],"no-unused-vars","'error' is assigned a value but never used.","unusedVar",["150"],["151"],"'Register' is defined but never used.","React Hook useEffect has a missing dependency: 'logIn'. Either include it or remove the dependency array.","ArrayExpression",["153"],"'Button' is defined but never used.",["150"],["151"],["150"],["151"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Wrap the definition of 'logIn' in its own useCallback() Hook.",{"range":"158","text":"159"},"Update the dependencies array to be: [logIn]",{"range":"160","text":"161"},[842,913],"useCallback(() => {\n    history.replace({\n      pathname: \"/dashboard\",\n    });\n  })",[851,853],"[logIn]"]