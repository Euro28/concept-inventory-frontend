[{"/home/euro/Documents/concept-inventory-frontend/src/index.js":"1","/home/euro/Documents/concept-inventory-frontend/src/App.js":"2","/home/euro/Documents/concept-inventory-frontend/src/Login/login.jsx":"3","/home/euro/Documents/concept-inventory-frontend/src/Login/register.jsx":"4","/home/euro/Documents/concept-inventory-frontend/src/Dashboard/dashboard.jsx":"5","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newQuestion.jsx":"6","/home/euro/Documents/concept-inventory-frontend/src/Quiz/results.jsx":"7","/home/euro/Documents/concept-inventory-frontend/src/Quiz/quiz.jsx":"8","/home/euro/Documents/concept-inventory-frontend/src/Login/loginToolbar.jsx":"9","/home/euro/Documents/concept-inventory-frontend/src/Dashboard/dashboardToolbar.jsx":"10","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newAnswer.jsx":"11","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newQuestionComponents.js":"12","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/enteredAnswers.jsx":"13","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/currentQuestions.jsx":"14"},{"size":661,"mtime":1610658721517,"results":"15","hashOfConfig":"16"},{"size":850,"mtime":1610658721513,"results":"17","hashOfConfig":"16"},{"size":2357,"mtime":1610790203528,"results":"18","hashOfConfig":"16"},{"size":1803,"mtime":1610658721513,"results":"19","hashOfConfig":"16"},{"size":1567,"mtime":1610658721513,"results":"20","hashOfConfig":"16"},{"size":3660,"mtime":1610760364908,"results":"21","hashOfConfig":"16"},{"size":872,"mtime":1610658721513,"results":"22","hashOfConfig":"16"},{"size":1466,"mtime":1610827922482,"results":"23","hashOfConfig":"16"},{"size":403,"mtime":1610658721513,"results":"24","hashOfConfig":"16"},{"size":444,"mtime":1610658721513,"results":"25","hashOfConfig":"16"},{"size":1527,"mtime":1610760364908,"results":"26","hashOfConfig":"16"},{"size":794,"mtime":1610658721513,"results":"27","hashOfConfig":"16"},{"size":448,"mtime":1610760364904,"results":"28","hashOfConfig":"16"},{"size":836,"mtime":1610760364904,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1vwlrz7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},"/home/euro/Documents/concept-inventory-frontend/src/index.js",[],["61","62"],"/home/euro/Documents/concept-inventory-frontend/src/App.js",[],"/home/euro/Documents/concept-inventory-frontend/src/Login/login.jsx",["63","64"],"/home/euro/Documents/concept-inventory-frontend/src/Login/register.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Dashboard/dashboard.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newQuestion.jsx",["65"],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/results.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/quiz.jsx",["66"],"/home/euro/Documents/concept-inventory-frontend/src/Login/loginToolbar.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Dashboard/dashboardToolbar.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newAnswer.jsx",["67"],"import React, { useState } from \"react\";\nimport { BUTTON, MYFORM, CONTAINER } from \"./newQuestionComponents.js\";\nimport { Form, Button } from \"react-bootstrap\";\n\n//the form for adding a new answer should have 3 fields\n//the first field is display answer\n//the second field should be a dropdown of concepts, if the concepts\n//they are looking for is not found they should be able to add a custom one that is saved\n//the third field is a checkbox stating the answer is correct\n\nconst NewAnswer = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [misconception, setMisconception] = useState(\"\");\n  const [correct, setCorrect] = useState(false);\n\n  return (\n    <CONTAINER>\n      <MYFORM\n        className=\"mx-auto\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          props.addAnswer({ text: title, value: misconception, correct });\n        }}\n      >\n        <Form.Group controlId=\"answerTitle\">\n          <Form.Label> Answer :</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"answer\"\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"answerConcepts\">\n          <Form.Label> Misconception: </Form.Label>\n          <Form.Control\n            as=\"select\"\n            defaultValue=\"Choose...\"\n            onChange={(e) => setMisconception(e.target.value)}\n          >\n            <option>Choose...</option>\n            <option>Conjunction</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group id=\"correctCheckbox\">\n          <Form.Check\n            type=\"checkbox\"\n            label=\"Correct Answer?\"\n            onChange={(e) => setCorrect(e.target.checked)}\n          />\n        </Form.Group>\n        <BUTTON type=\"submit\"> Submit </BUTTON>\n      </MYFORM>\n    </CONTAINER>\n  );\n};\n\nexport default NewAnswer;\n","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newQuestionComponents.js",[],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/enteredAnswers.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/currentQuestions.jsx",["68","69","70"],"import React from \"react\";\n\nimport { ListGroup, Button } from \"react-bootstrap\";\n\nconst CurrentQuestions = (props) => {\n  return (\n    <div>\n      <ListGroup>\n        {props.questions &&\n          props.questions\n            .filter(\n              (ques) => ques.type === \"checkbox\" || ques.type === \"radiogroup\"\n            )\n            .map((ques) => (\n              <ListGroup.Item key={ques.title}>\n                <div style={{ \"maxWidth\": \"700px\" }}>{ques.title}</div>\n                <Button\n                  style={{ float: \"right\" }}\n                  variant=\"danger\"\n                  onClick={() => props.removeQuestion(ques.title)}\n                >\n                  Delete\n                </Button>\n              </ListGroup.Item>\n            ))}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default CurrentQuestions;\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":32,"column":6,"nodeType":"81","endLine":32,"endColumn":8,"suggestions":"82"},{"ruleId":"75","severity":1,"message":"83","line":20,"column":10,"nodeType":"77","messageId":"78","endLine":20,"endColumn":23},{"ruleId":"75","severity":1,"message":"84","line":8,"column":10,"nodeType":"77","messageId":"78","endLine":8,"endColumn":15},{"ruleId":"75","severity":1,"message":"85","line":3,"column":16,"nodeType":"77","messageId":"78","endLine":3,"endColumn":22},{"ruleId":"75","severity":1,"message":"86","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":19},{"ruleId":"75","severity":1,"message":"85","line":3,"column":21,"nodeType":"77","messageId":"78","endLine":3,"endColumn":27},{"ruleId":"79","severity":1,"message":"87","line":14,"column":6,"nodeType":"81","endLine":14,"endColumn":22,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logIn'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'misconception' is assigned a value but never used.","'error' is assigned a value but never used.","'Button' is defined but never used.","'ListGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'props.questions'. Either include it or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [logIn]",{"range":"97","text":"98"},"Update the dependencies array to be: [props.question, props.questions]",{"range":"99","text":"100"},[850,852],"[logIn]",[337,353],"[props.question, props.questions]"]