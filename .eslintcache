[{"/home/euro/Documents/concept-inventory-frontend/src/index.js":"1","/home/euro/Documents/concept-inventory-frontend/src/App.js":"2","/home/euro/Documents/concept-inventory-frontend/src/Login/login.jsx":"3","/home/euro/Documents/concept-inventory-frontend/src/Login/register.jsx":"4","/home/euro/Documents/concept-inventory-frontend/src/Dashboard/dashboard.jsx":"5","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newQuestion.jsx":"6","/home/euro/Documents/concept-inventory-frontend/src/Quiz/results.jsx":"7","/home/euro/Documents/concept-inventory-frontend/src/Quiz/quiz.jsx":"8","/home/euro/Documents/concept-inventory-frontend/src/Login/loginToolbar.jsx":"9","/home/euro/Documents/concept-inventory-frontend/src/Dashboard/dashboardToolbar.jsx":"10","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newAnswer.jsx":"11","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newQuestionComponents.js":"12","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/enteredAnswers.jsx":"13","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/currentQuestions.jsx":"14"},{"size":661,"mtime":1610658721517,"results":"15","hashOfConfig":"16"},{"size":850,"mtime":1610658721513,"results":"17","hashOfConfig":"16"},{"size":2322,"mtime":1610658721513,"results":"18","hashOfConfig":"16"},{"size":1803,"mtime":1610658721513,"results":"19","hashOfConfig":"16"},{"size":1567,"mtime":1610658721513,"results":"20","hashOfConfig":"16"},{"size":3059,"mtime":1610730655272,"results":"21","hashOfConfig":"16"},{"size":872,"mtime":1610658721513,"results":"22","hashOfConfig":"16"},{"size":1462,"mtime":1610658721513,"results":"23","hashOfConfig":"16"},{"size":403,"mtime":1610658721513,"results":"24","hashOfConfig":"16"},{"size":444,"mtime":1610658721513,"results":"25","hashOfConfig":"16"},{"size":1889,"mtime":1610678703372,"results":"26","hashOfConfig":"16"},{"size":794,"mtime":1610658721513,"results":"27","hashOfConfig":"16"},{"size":276,"mtime":1610728028884,"results":"28","hashOfConfig":"16"},{"size":416,"mtime":1610730653828,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1vwlrz7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/euro/Documents/concept-inventory-frontend/src/index.js",[],["62","63"],"/home/euro/Documents/concept-inventory-frontend/src/App.js",[],"/home/euro/Documents/concept-inventory-frontend/src/Login/login.jsx",["64","65"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nimport Register from \"./register.jsx\"\nimport LoginToolbar from \"./loginToolbar.jsx\";\n\nconst Login = () => {\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  \n  useEffect(() => {\n    const loggedIn = async () => {\n      try {\n        const user = await axios.post(\"/api/login\");\n        if (user.status === 200) {\n          logIn();\n        }\n      } catch (err) {}\n    };\n\n    loggedIn();\n  }, []);\n\n  const logIn = () => {\n    history.replace({\n      pathname: \"/dashboard\",\n    });\n  };\n\n  const submitName = async (e) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      const user = await axios.post(\"/api/login\", { name });\n      setLoading(false);\n      if (user.status === 200) {\n        Cookies.set(\"name\", name);\n        logIn();\n      } else {\n        setError(true);\n        setName(\"\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <LoginToolbar />\n      <div className=\"Login\">\n        <h1> Login </h1>\n        <Form onSubmit={(e) => submitName(e)}>\n          <Form.Group controlid=\"formname\">\n            <Form.Label> username</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"enter name\"\n              onChange={(e) => setName(e.target.value)}\n            />\n            <Form.Text className=\"text-muted\">register a name first</Form.Text>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            login\n          </Button>\n        </Form>\n        {loading && (\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\"> Loading... </span>\n          </Spinner>\n        )}\n\n        {error && (\n          <Alert variant={\"danger\"} dismissible onClose={() => setError(false)}>\n            No such user exists\n          </Alert>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","/home/euro/Documents/concept-inventory-frontend/src/Login/register.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Dashboard/dashboard.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newQuestion.jsx",["66"],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/results.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/quiz.jsx",["67"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport * as Survey from \"survey-react\";\n\nconst Quiz = (props) => {\n  // const [quiz, setQuiz] = useState({})\n  const [resultPage, setResultPage] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [questions, setQuestions] = useState({});\n\n  useEffect(() => {\n    const getQuestions = async () => {\n      try {\n        const questionsAPI = await axios.get(\"/api/questions\");\n        setQuestions(questionsAPI.data);\n      } catch (err) {\n        setError(\"couldnt retrieve questions please contact euro\");\n      }\n    };\n\n    getQuestions();\n  }, []);\n  const storeData = async (quizResults) => {\n    try {\n      await axios.post(\"/api/results\", {\n        results: quizResults,\n      });\n      await axios.patch(\"/api/takenQuiz\");\n    } catch (err) {\n      setError(\n        \"couldn't post results of quiz, could you please take it again sorry :(\"\n      );\n    }\n  };\n  //make this a separate file\n  const Results = (data) => (\n    <main>\n      <h1> Results page </h1>\n    </main>\n  );\n\n  return (\n    <>\n      {resultPage ? (\n        Results()\n      ) : (\n        <div>\n          <Survey.Survey\n            showCompletedPage={false}\n            onComplete={(data) => {\n              storeData(data.valuesHash);\n              setResultPage(true);\n            }}\n            json={questions}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Quiz;\n","/home/euro/Documents/concept-inventory-frontend/src/Login/loginToolbar.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Dashboard/dashboardToolbar.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newAnswer.jsx",["68"],"import React, { useState } from \"react\";\nimport { BUTTON, MYFORM, CONTAINER } from \"./newQuestionComponents.js\";\nimport { Form, Button } from \"react-bootstrap\";\n\n//the form for adding a new answer should have 3 fields\n//the first field is display answer\n//the second field should be a dropdown of concepts, if the concepts\n//they are looking for is not found they should be able to add a custom one that is saved\n//the third field is a checkbox stating the answer is correct\n\nconst NewAnswer = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [misconception, setMisconception] = useState(\"\");\n  const [correct, setCorrect] = useState(false);\n\n  return (\n    <CONTAINER>\n      <MYFORM\n        className=\"mx-auto\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          props.addAnswer({ text: title, value: misconception, correct });\n        }}\n      >\n        <Form.Group controlId=\"answerTitle\">\n          <Form.Label> Answer :</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"answer\"\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"answerConcepts\">\n          <Form.Label> Misconception: </Form.Label>\n          <Form.Control\n            as=\"select\"\n            defaultValue=\"Choose...\"\n            onChange={(e) => setMisconception(e.target.value)}\n          >\n            <option>Choose...</option>\n            <option>Conjunction</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group id=\"correctCheckbox\">\n          <Form.Check\n            type=\"checkbox\"\n            label=\"Correct Answer?\"\n            onChange={(e) => setCorrect(e.target.checked)}\n          />\n        </Form.Group>\n        <BUTTON type=\"submit\"> Submit </BUTTON>\n      </MYFORM>\n    </CONTAINER>\n  );\n};\n\nexport default NewAnswer;\n","/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/newQuestionComponents.js",[],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/enteredAnswers.jsx",[],"/home/euro/Documents/concept-inventory-frontend/src/Quiz/newQuiz/currentQuestions.jsx",["69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":11,"column":8,"nodeType":"78","messageId":"79","endLine":11,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":32,"column":6,"nodeType":"82","endLine":32,"endColumn":8,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":3,"column":16,"nodeType":"78","messageId":"79","endLine":3,"endColumn":22},{"ruleId":"76","severity":1,"message":"85","line":8,"column":10,"nodeType":"78","messageId":"79","endLine":8,"endColumn":15},{"ruleId":"76","severity":1,"message":"84","line":3,"column":16,"nodeType":"78","messageId":"79","endLine":3,"endColumn":22},{"ruleId":"76","severity":1,"message":"86","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":19},{"ruleId":"76","severity":1,"message":"84","line":3,"column":21,"nodeType":"78","messageId":"79","endLine":3,"endColumn":27},{"ruleId":"80","severity":1,"message":"87","line":14,"column":6,"nodeType":"82","endLine":14,"endColumn":22,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logIn'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'Button' is defined but never used.","'error' is assigned a value but never used.","'ListGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'props.questions'. Either include it or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [logIn]",{"range":"97","text":"98"},"Update the dependencies array to be: [props.question, props.questions]",{"range":"99","text":"100"},[851,853],"[logIn]",[337,353],"[props.question, props.questions]"]